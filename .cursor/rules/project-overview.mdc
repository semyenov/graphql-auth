---
description: 
globs: 
alwaysApply: false
---
# GraphQL Auth Server - Project Overview

This is a GraphQL authentication server built with Pothos, Prisma, and H3.

## Architecture Stack
- **GraphQL Schema**: Pothos (migrated from Nexus)
- **Database ORM**: Prisma with SQLite
- **HTTP Server**: H3 + Bun runtime
- **Authentication**: JWT tokens with bcrypt
- **Permissions**: GraphQL Shield middleware
- **Type Safety**: TypeScript throughout

## Key Files Structure

### Core Schema & API
- [src/schema.ts](mdc:src/schema.ts) - Main GraphQL schema using Pothos
- [src/builder.ts](mdc:src/builder.ts) - Pothos builder configuration with Prisma plugin
- [src/server.ts](mdc:src/server.ts) - H3 server setup with GraphQL endpoint
- [src/context.ts](mdc:src/context.ts) - GraphQL context creation

### Authentication & Security
- [src/utils.ts](mdc:src/utils.ts) - JWT utilities and user ID extraction
- [src/permissions/index.ts](mdc:src/permissions/index.ts) - GraphQL Shield permissions rules

### Database
- [prisma/schema.prisma](mdc:prisma/schema.prisma) - Database schema with User/Post models
- [.pothos/types.d.ts](mdc:.pothos/types.d.ts) - Auto-generated Pothos types from Prisma

### Configuration
- [package.json](mdc:package.json) - Dependencies and scripts
- [tsconfig.json](mdc:tsconfig.json) - TypeScript configuration

## API Features
- User signup/login with JWT tokens
- CRUD operations for posts (drafts and published)
- Role-based permissions (author ownership rules)
- Public feed endpoint for published posts
- User profile management
