/**
 * Core Error Constants
 *
 * Error codes, messages, and constants following the
 * IMPROVED-FILE-STRUCTURE.md specification.
 */

/**
 * Standard error codes used throughout the application
 */
export const ERROR_CODES = {
  // Authentication & Authorization
  UNAUTHENTICATED: 'UNAUTHENTICATED',
  FORBIDDEN: 'FORBIDDEN',
  TOKEN_EXPIRED: 'TOKEN_EXPIRED',
  TOKEN_MALFORMED: 'TOKEN_MALFORMED',
  TOKEN_INVALID_SIGNATURE: 'TOKEN_INVALID_SIGNATURE',

  // Validation
  VALIDATION_ERROR: 'VALIDATION_ERROR',
  INVALID_INPUT: 'INVALID_INPUT',
  MISSING_REQUIRED_FIELD: 'MISSING_REQUIRED_FIELD',

  // Resources
  NOT_FOUND: 'NOT_FOUND',
  CONFLICT: 'CONFLICT',
  DUPLICATE_ENTRY: 'DUPLICATE_ENTRY',

  // Rate Limiting
  RATE_LIMIT_EXCEEDED: 'RATE_LIMIT_EXCEEDED',
  TOO_MANY_REQUESTS: 'TOO_MANY_REQUESTS',

  // System
  INTERNAL_ERROR: 'INTERNAL_ERROR',
  SERVICE_UNAVAILABLE: 'SERVICE_UNAVAILABLE',
  TIMEOUT: 'TIMEOUT',
  UNKNOWN_ERROR: 'UNKNOWN_ERROR',

  // Database
  DATABASE_ERROR: 'DATABASE_ERROR',
  CONSTRAINT_VIOLATION: 'CONSTRAINT_VIOLATION',
  FOREIGN_KEY_VIOLATION: 'FOREIGN_KEY_VIOLATION',
  VALUE_TOO_LONG: 'VALUE_TOO_LONG',

  // Business Rules
  BUSINESS_RULE_VIOLATION: 'BUSINESS_RULE_VIOLATION',
  OPERATION_NOT_ALLOWED: 'OPERATION_NOT_ALLOWED',

  // GraphQL
  GRAPHQL_SYNTAX_ERROR: 'GRAPHQL_SYNTAX_ERROR',
  GRAPHQL_VALIDATION_ERROR: 'GRAPHQL_VALIDATION_ERROR',
} as const

/**
 * Standard error messages
 */
export const ERROR_MESSAGES = {
  // Authentication & Authorization
  AUTHENTICATION_REQUIRED: 'You must be logged in to perform this action',
  INVALID_CREDENTIALS: 'Invalid email or password',
  INSUFFICIENT_PERMISSIONS: 'You do not have permission to perform this action',
  TOKEN_EXPIRED: 'Your session has expired. Please log in again',
  TOKEN_INVALID: 'Invalid authentication token',

  // Posts
  POST_NOT_FOUND: 'Post not found',
  NOT_POST_OWNER: 'You can only modify posts that you have created',
  POST_ALREADY_PUBLISHED: 'Post is already published',
  POST_ALREADY_DRAFT: 'Post is already a draft',

  // Users
  USER_NOT_FOUND: 'User not found',
  EMAIL_ALREADY_EXISTS: 'An account with this email already exists',
  INVALID_USER_ID: 'Invalid user identifier',

  // Validation
  INVALID_EMAIL: 'Please provide a valid email address',
  PASSWORD_TOO_WEAK: 'Password must be at least 8 characters long',
  REQUIRED_FIELD_MISSING: 'Required field is missing',
  INVALID_FORMAT: 'Invalid format provided',

  // Rate Limiting
  TOO_MANY_REQUESTS: 'Too many requests. Please try again later',
  RATE_LIMIT_EXCEEDED: 'Rate limit exceeded. Please slow down',

  // System
  INTERNAL_SERVER_ERROR: 'An internal server error occurred',
  SERVICE_UNAVAILABLE: 'Service is temporarily unavailable',
  OPERATION_TIMEOUT: 'Operation timed out',
  UNKNOWN_ERROR: 'An unexpected error occurred',

  // Database
  DATABASE_CONNECTION_ERROR: 'Database connection error',
  DATA_INTEGRITY_ERROR: 'Data integrity constraint violation',
  DUPLICATE_RECORD: 'A record with this information already exists',

  // GraphQL
  INVALID_QUERY: 'Invalid GraphQL query',
  QUERY_TOO_COMPLEX: 'Query is too complex',
  MUTATION_FAILED: 'Mutation failed to execute',
} as const

/**
 * HTTP status codes for different error types
 */
export const ERROR_STATUS_CODES = {
  [ERROR_CODES.UNAUTHENTICATED]: 401,
  [ERROR_CODES.FORBIDDEN]: 403,
  [ERROR_CODES.TOKEN_EXPIRED]: 401,
  [ERROR_CODES.TOKEN_MALFORMED]: 401,
  [ERROR_CODES.TOKEN_INVALID_SIGNATURE]: 401,

  [ERROR_CODES.VALIDATION_ERROR]: 400,
  [ERROR_CODES.INVALID_INPUT]: 400,
  [ERROR_CODES.MISSING_REQUIRED_FIELD]: 400,

  [ERROR_CODES.NOT_FOUND]: 404,
  [ERROR_CODES.CONFLICT]: 409,
  [ERROR_CODES.DUPLICATE_ENTRY]: 409,

  [ERROR_CODES.RATE_LIMIT_EXCEEDED]: 429,
  [ERROR_CODES.TOO_MANY_REQUESTS]: 429,

  [ERROR_CODES.INTERNAL_ERROR]: 500,
  [ERROR_CODES.SERVICE_UNAVAILABLE]: 503,
  [ERROR_CODES.TIMEOUT]: 408,
  [ERROR_CODES.UNKNOWN_ERROR]: 500,

  [ERROR_CODES.DATABASE_ERROR]: 500,
  [ERROR_CODES.CONSTRAINT_VIOLATION]: 400,
  [ERROR_CODES.FOREIGN_KEY_VIOLATION]: 400,
  [ERROR_CODES.VALUE_TOO_LONG]: 400,

  [ERROR_CODES.BUSINESS_RULE_VIOLATION]: 422,
  [ERROR_CODES.OPERATION_NOT_ALLOWED]: 422,

  [ERROR_CODES.GRAPHQL_SYNTAX_ERROR]: 400,
  [ERROR_CODES.GRAPHQL_VALIDATION_ERROR]: 400,
} as const

/**
 * Error categories for grouping and filtering
 */
export const ERROR_CATEGORIES = {
  AUTHENTICATION: 'authentication',
  AUTHORIZATION: 'authorization',
  VALIDATION: 'validation',
  RESOURCE: 'resource',
  RATE_LIMITING: 'rate_limiting',
  SYSTEM: 'system',
  DATABASE: 'database',
  BUSINESS_LOGIC: 'business_logic',
  GRAPHQL: 'graphql',
} as const

/**
 * Map error codes to categories
 */
export const ERROR_CODE_CATEGORIES = {
  [ERROR_CODES.UNAUTHENTICATED]: ERROR_CATEGORIES.AUTHENTICATION,
  [ERROR_CODES.TOKEN_EXPIRED]: ERROR_CATEGORIES.AUTHENTICATION,
  [ERROR_CODES.TOKEN_MALFORMED]: ERROR_CATEGORIES.AUTHENTICATION,
  [ERROR_CODES.TOKEN_INVALID_SIGNATURE]: ERROR_CATEGORIES.AUTHENTICATION,

  [ERROR_CODES.FORBIDDEN]: ERROR_CATEGORIES.AUTHORIZATION,

  [ERROR_CODES.VALIDATION_ERROR]: ERROR_CATEGORIES.VALIDATION,
  [ERROR_CODES.INVALID_INPUT]: ERROR_CATEGORIES.VALIDATION,
  [ERROR_CODES.MISSING_REQUIRED_FIELD]: ERROR_CATEGORIES.VALIDATION,

  [ERROR_CODES.NOT_FOUND]: ERROR_CATEGORIES.RESOURCE,
  [ERROR_CODES.CONFLICT]: ERROR_CATEGORIES.RESOURCE,
  [ERROR_CODES.DUPLICATE_ENTRY]: ERROR_CATEGORIES.RESOURCE,

  [ERROR_CODES.RATE_LIMIT_EXCEEDED]: ERROR_CATEGORIES.RATE_LIMITING,
  [ERROR_CODES.TOO_MANY_REQUESTS]: ERROR_CATEGORIES.RATE_LIMITING,

  [ERROR_CODES.INTERNAL_ERROR]: ERROR_CATEGORIES.SYSTEM,
  [ERROR_CODES.SERVICE_UNAVAILABLE]: ERROR_CATEGORIES.SYSTEM,
  [ERROR_CODES.TIMEOUT]: ERROR_CATEGORIES.SYSTEM,
  [ERROR_CODES.UNKNOWN_ERROR]: ERROR_CATEGORIES.SYSTEM,

  [ERROR_CODES.DATABASE_ERROR]: ERROR_CATEGORIES.DATABASE,
  [ERROR_CODES.CONSTRAINT_VIOLATION]: ERROR_CATEGORIES.DATABASE,
  [ERROR_CODES.FOREIGN_KEY_VIOLATION]: ERROR_CATEGORIES.DATABASE,
  [ERROR_CODES.VALUE_TOO_LONG]: ERROR_CATEGORIES.DATABASE,

  [ERROR_CODES.BUSINESS_RULE_VIOLATION]: ERROR_CATEGORIES.BUSINESS_LOGIC,
  [ERROR_CODES.OPERATION_NOT_ALLOWED]: ERROR_CATEGORIES.BUSINESS_LOGIC,

  [ERROR_CODES.GRAPHQL_SYNTAX_ERROR]: ERROR_CATEGORIES.GRAPHQL,
  [ERROR_CODES.GRAPHQL_VALIDATION_ERROR]: ERROR_CATEGORIES.GRAPHQL,
} as const

/**
 * Errors that should be reported to monitoring systems
 */
export const REPORTABLE_ERROR_CODES = [
  ERROR_CODES.INTERNAL_ERROR,
  ERROR_CODES.SERVICE_UNAVAILABLE,
  ERROR_CODES.TIMEOUT,
  ERROR_CODES.UNKNOWN_ERROR,
  ERROR_CODES.DATABASE_ERROR,
] as const

/**
 * Errors that should be logged at ERROR level
 */
export const ERROR_LEVEL_CODES = [
  ERROR_CODES.INTERNAL_ERROR,
  ERROR_CODES.SERVICE_UNAVAILABLE,
  ERROR_CODES.UNKNOWN_ERROR,
  ERROR_CODES.DATABASE_ERROR,
] as const

/**
 * Errors that should be logged at WARN level
 */
export const WARN_LEVEL_CODES = [
  ERROR_CODES.UNAUTHENTICATED,
  ERROR_CODES.FORBIDDEN,
  ERROR_CODES.NOT_FOUND,
  ERROR_CODES.CONFLICT,
  ERROR_CODES.RATE_LIMIT_EXCEEDED,
  ERROR_CODES.VALIDATION_ERROR,
] as const
